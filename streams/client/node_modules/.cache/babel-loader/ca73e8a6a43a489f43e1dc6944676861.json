{"ast":null,"code":"var _jsxFileName = \"/Users/glenmcculloch/react-workspace/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n  renderInput({\n    input,\n    label,\n    meta\n  }) {\n    console.log(meta);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }\n    }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n      autocomplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, meta.touched ? meta.error : ''));\n  }\n\n  onSubmit(formValues) {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"ui form\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      label: \"Enter Title\",\n      component: this.renderInput,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      label: \"Enter Description\",\n      component: this.renderInput,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}\n\n;\n\nconst validate = ({\n  title,\n  description\n}) => {\n  const errors = {};\n\n  if (!title) {\n    errors.title = \"You must enter a title.\";\n  }\n\n  if (!description) {\n    errors.description = \"You must enter a description.\";\n  }\n\n  return errors;\n}; // redux form takes one object - what the form is called\n\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate: validate\n})(StreamCreate);","map":{"version":3,"sources":["/Users/glenmcculloch/react-workspace/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderInput","input","label","meta","console","log","touched","error","onSubmit","formValues","render","props","handleSubmit","validate","title","description","errors","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAD,EAAyB;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,KAAR,CADJ,eAEI,+CAAWD,KAAX;AAAkB,MAAA,YAAY,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAME,IAAI,CAACG,OAAL,GAAeH,IAAI,CAACI,KAApB,GAA4B,EAAlC,CAHJ,CADJ;AAOH;;AAEDC,EAAAA,QAAQ,CAACC,UAAD,EAAa,CAEpB;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKJ,QAA7B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,KAAK,EAAC,aAFV;AAGI,MAAA,SAAS,EAAE,KAAKR,WAHpB;AAII,MAAA,IAAI,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAOI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,aADT;AAEI,MAAA,KAAK,EAAC,mBAFV;AAGI,MAAA,SAAS,EAAE,KAAKA,WAHpB;AAII,MAAA,IAAI,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAaI;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,CADJ;AAiBH;;AAlCsC;;AAmC1C;;AAED,MAAMa,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA4B;AACzC,QAAMC,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACF,KAAL,EAAY;AACRE,IAAAA,MAAM,CAACF,KAAP,GAAe,yBAAf;AACH;;AACD,MAAI,CAACC,WAAL,EAAkB;AACdC,IAAAA,MAAM,CAACD,WAAP,GAAqB,+BAArB;AACH;;AAED,SAAOC,MAAP;AACH,CAXD,C,CAaA;;;AACA,eAAenB,SAAS,CAAC;AACrBoB,EAAAA,IAAI,EAAE,cADe;AAErBJ,EAAAA,QAAQ,EAAEA;AAFW,CAAD,CAAT,CAGZf,YAHY,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n    renderInput({ input, label, meta }) {\n        console.log(meta);\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <input {...input} autocomplete=\"off\" />\n                <div>{meta.touched ? meta.error : ''}</div>\n            </div>\n        );\n    }\n\n    onSubmit(formValues) {\n        \n    }\n\n    render() {\n        return (\n            <form className=\"ui form\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <Field \n                    name=\"title\"\n                    label=\"Enter Title\"\n                    component={this.renderInput}\n                    type=\"text\"\n                />\n                <Field \n                    name=\"description\"\n                    label=\"Enter Description\"\n                    component={this.renderInput}\n                    type=\"text\"\n                />\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        );\n    }\n};\n\nconst validate = ({ title, description }) => {\n    const errors = {};\n\n    if (!title) {\n        errors.title = \"You must enter a title.\";\n    }\n    if (!description) {\n        errors.description = \"You must enter a description.\";\n    }\n\n    return errors;\n};\n\n// redux form takes one object - what the form is called\nexport default reduxForm({\n    form: 'streamCreate',\n    validate: validate\n})(StreamCreate);"]},"metadata":{},"sourceType":"module"}