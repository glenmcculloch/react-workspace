{"ast":null,"code":"var _jsxFileName = \"/Users/glenmcculloch/react-workspace/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"right floated content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `streams/edit/${stream.id}`,\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Link, {\n        to: `streams/delete/${stream.id}`,\n        className: \"ui button negative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      }, \"Delete\"));\n    }\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/streams/show/new\",\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, \"Create Stream\"));\n    }\n  } // helper function to render each stream\n\n\n  renderStreams() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, this.renderAdmin(stream), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `streams/${stream.id}`,\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, stream.title), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, stream.description)));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Streams\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, this.renderStreams()), this.renderCreate());\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/glenmcculloch/react-workspace/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","id","renderCreate","isSignedIn","textAlign","renderStreams","streams","map","title","description","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n    \n    renderAdmin(stream) {\n        if (stream.userId === this.props.currentUserId) {\n            return (\n                <div className=\"right floated content\">\n                    <Link to={`streams/edit/${stream.id}`} className=\"ui button primary\">\n                        Edit\n                    </Link>\n                    <Link to={`streams/delete/${stream.id}`} className=\"ui button negative\">\n                        Delete\n                    </Link>\n                </div>\n            );\n        }\n    }\n\n    renderCreate() {\n        if (this.props.isSignedIn) {\n            return (\n                <div style={{ textAlign: 'right' }}>\n                    <Link to=\"/streams/show/new\" className=\"ui button primary\">\n                        Create Stream\n                    </Link>\n                </div>\n            );\n        }\n    }\n\n    // helper function to render each stream\n    renderStreams() {\n        return this.props.streams.map(stream => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                    {this.renderAdmin(stream)}\n                    <i className=\"large middle aligned icon camera\" />\n                    <div className=\"content\">\n                        <Link to={`streams/${stream.id}`} className=\"header\">\n                            {stream.title}\n                        </Link>\n                        <div className=\"description\">{stream.description}</div>\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">{this.renderStreams()}</div>\n                {this.renderCreate()}\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn\n    };\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}