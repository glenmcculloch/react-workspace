{"ast":null,"code":"import streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, LIST_STREAMS, GET_STREAM, DELETE_STREAM, UPDATE_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n}; // redux thunk syntax\n\nexport const createStream = formValues => async dispatch => {\n  const {\n    data\n  } = await streams.post('/streams', formValues); // dispatch has to be used when using redux thunk\n\n  dispatch({\n    type: CREATE_STREAM,\n    payload: data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const {\n    data\n  } = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const {\n    data\n  } = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};\nexport const updateStream = (id, formValues) => async dispatch => {\n  const {\n    data\n  } = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: UPDATE_STREAM,\n    payload: data\n  });\n};","map":{"version":3,"sources":["/Users/glenmcculloch/react-workspace/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","LIST_STREAMS","GET_STREAM","DELETE_STREAM","UPDATE_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","data","post","fetchStreams","get","FETCH_STREAMS","fetchStream","id","FETCH_STREAM","deleteStream","delete","updateStream","put"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,aAA5B,EAA2CC,YAA3C,EAAyDC,UAAzD,EAAqEC,aAArE,EAAoFC,aAApF,QAAyG,SAAzG;AAEA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAET,OADH;AAEHU,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMW,YAAY,GAAGC,UAAU,IAAI,MAAMC,QAAN,IAAkB;AACxD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMhB,OAAO,CAACiB,IAAR,CAAa,UAAb,EAAyBH,UAAzB,CAAvB,CADwD,CAGxD;;AACAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,aAAR;AAAuBQ,IAAAA,OAAO,EAAEK;AAAhC,GAAD,CAAR;AACH,CALM;AAOP,OAAO,MAAME,YAAY,GAAG,MAAM,MAAMH,QAAN,IAAkB;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMhB,OAAO,CAACmB,GAAR,CAAY,UAAZ,CAAvB;AAEAJ,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEU,aAAR;AAAuBT,IAAAA,OAAO,EAAEK;AAAhC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMK,WAAW,GAAGC,EAAE,IAAI,MAAMP,QAAN,IAAkB;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMhB,OAAO,CAACmB,GAAR,CAAa,YAAWG,EAAG,EAA3B,CAAvB;AAEAP,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEa,YAAR;AAAsBZ,IAAAA,OAAO,EAAEK;AAA/B,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMQ,YAAY,GAAGF,EAAE,IAAI,MAAMP,QAAN,IAAkB;AAChD,QAAMf,OAAO,CAACyB,MAAR,CAAgB,YAAWH,EAAG,EAA9B,CAAN;AAEAP,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEJ,aAAR;AAAuBK,IAAAA,OAAO,EAAEW;AAAhC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMI,YAAY,GAAG,CAACJ,EAAD,EAAKR,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC9D,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMhB,OAAO,CAAC2B,GAAR,CAAa,YAAWL,EAAG,EAA3B,EAA8BR,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEH,aAAR;AAAuBI,IAAAA,OAAO,EAAEK;AAAhC,GAAD,CAAR;AACH,CAJM","sourcesContent":["import streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, LIST_STREAMS, GET_STREAM, DELETE_STREAM, UPDATE_STREAM } from './types';\n\nexport const signIn = userId => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n};\n\n// redux thunk syntax\nexport const createStream = formValues => async dispatch => {\n    const { data } = await streams.post('/streams', formValues);\n\n    // dispatch has to be used when using redux thunk\n    dispatch({ type: CREATE_STREAM, payload: data });\n};\n\nexport const fetchStreams = () => async dispatch => {\n    const { data } = await streams.get('/streams');\n\n    dispatch({ type: FETCH_STREAMS, payload: data });\n};\n\nexport const fetchStream = id => async dispatch => {\n    const { data } = await streams.get(`/streams/${id}`);\n\n    dispatch({ type: FETCH_STREAM, payload: data });\n};\n\nexport const deleteStream = id => async dispatch => {\n    await streams.delete(`/streams/${id}`);\n\n    dispatch({ type: DELETE_STREAM, payload: id });\n};\n\nexport const updateStream = (id, formValues) => async dispatch => {\n    const { data } = await streams.put(`/streams/${id}`, formValues);\n\n    dispatch({ type: UPDATE_STREAM, payload: data });\n};"]},"metadata":{},"sourceType":"module"}