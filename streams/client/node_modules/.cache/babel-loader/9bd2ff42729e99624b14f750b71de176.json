{"ast":null,"code":"var _jsxFileName = \"/Users/glenmcculloch/react-workspace/streams/client/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.match.params.id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderStream() {\n    if (this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(StreamForm, {\n        onSubmit: this.onSubmit,\n        initialValues: _.pick(this.props.stream, 'title', 'description'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  }\n\n  render() {\n    console.log('STREAM EDIT', this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Edit this Stream\"), this.renderStream());\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/glenmcculloch/react-workspace/streams/client/src/components/streams/StreamEdit.js"],"names":["React","_","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","props","match","params","id","componentDidMount","renderStream","stream","pick","render","console","log","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKrCC,QALqC,GAK1BC,UAAU,IAAI;AACrB,WAAKC,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C;AACH,KAPoC;AAAA;;AACrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAMDE,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKL,KAAL,CAAWM,MAAf,EAAuB;AACnB,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AACI,QAAA,QAAQ,EAAE,KAAKR,QADnB;AAEI,QAAA,aAAa,EAAEP,CAAC,CAACgB,IAAF,CAAO,KAAKP,KAAL,CAAWM,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAQH;;AAED,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKV,KAAhC;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEK,KAAKK,YAAL,EAFL,CADJ;AAMH;;AAhCoC;;AAiCxC;;AAED,MAAMM,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAEP,IAAAA,MAAM,EAAEM,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACZ,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeX,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAsDE,UAAtD,CAAf","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit = formValues => {\n        this.props.editStream(this.props.match.params.id);\n    }\n\n    renderStream() {\n        if (this.props.stream) {\n            return (\n                <div>\n                    <StreamForm \n                        onSubmit={this.onSubmit} \n                        initialValues={_.pick(this.props.stream, 'title', 'description')}\n                    />\n                </div>\n            );\n        }\n\n        return <div>Loading...</div>;\n    }\n\n    render() {\n        console.log('STREAM EDIT', this.props);\n        return (\n            <div>\n                <h3>Edit this Stream</h3>\n                {this.renderStream()}\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] }\n};\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit);"]},"metadata":{},"sourceType":"module"}