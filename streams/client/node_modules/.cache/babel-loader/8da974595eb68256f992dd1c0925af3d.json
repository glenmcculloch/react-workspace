{"ast":null,"code":"import _ from 'lodash';\nimport { FETCH_STREAMS, FETCH_STREAM, CREATE_STREAM, EDIT_STREAM, DELETE_STREAM } from '../actions/types';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      console.log('FETCH STREAMS WAS CALLED');\n      return { ...state,\n        ..._.mapKeys(state, 'id')\n      };\n\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/glenmcculloch/react-workspace/streams/client/src/reducers/streamsReducer.js"],"names":["_","FETCH_STREAMS","FETCH_STREAM","CREATE_STREAM","EDIT_STREAM","DELETE_STREAM","state","action","type","console","log","mapKeys","payload","id","omit"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,aAAtC,EAAqDC,WAArD,EAAkEC,aAAlE,QAAuF,kBAAvF;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,aAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,aAAO,EAAE,GAAGJ,KAAL;AAAY,WAAGN,CAAC,CAACW,OAAF,CAAUL,KAAV,EAAiB,IAAjB;AAAf,OAAP;;AACJ,SAAKJ,YAAL;AACI,aAAO,EAAE,GAAGI,KAAL;AAAY,SAACC,MAAM,CAACK,OAAP,CAAeC,EAAhB,GAAqBN,MAAM,CAACK;AAAxC,OAAP;;AACJ,SAAKT,aAAL;AACI,aAAO,EAAE,GAAGG,KAAL;AAAY,SAACC,MAAM,CAACK,OAAP,CAAeC,EAAhB,GAAqBN,MAAM,CAACK;AAAxC,OAAP;;AACJ,SAAKR,WAAL;AACI,aAAO,EAAE,GAAGE,KAAL;AAAY,SAACC,MAAM,CAACK,OAAP,CAAeC,EAAhB,GAAqBN,MAAM,CAACK;AAAxC,OAAP;;AACJ,SAAKP,aAAL;AACI,aAAOL,CAAC,CAACc,IAAF,CAAOR,KAAP,EAAcC,MAAM,CAACK,OAArB,CAAP;;AACJ;AACI,aAAON,KAAP;AAbR;AAeH,CAhBD","sourcesContent":["import _ from 'lodash';\nimport { FETCH_STREAMS, FETCH_STREAM, CREATE_STREAM, EDIT_STREAM, DELETE_STREAM } from '../actions/types';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_STREAMS:\n            console.log('FETCH STREAMS WAS CALLED');\n            return { ...state, ..._.mapKeys(state, 'id') };\n        case FETCH_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case CREATE_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_STREAM:\n            return _.omit(state, action.payload);\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}