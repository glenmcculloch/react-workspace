{"ast":null,"code":"var _jsxFileName = \"/Users/glenmcculloch/react-workspace/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  } // helper function to render each stream\n\n\n  renderStreams() {\n    return null;\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, this.renderStreams());\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    streams: state.streams\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/glenmcculloch/react-workspace/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","renderStreams","render","console","log","streams","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,YAAX;AACH,GAHoC,CAKrC;;;AACAK,EAAAA,aAAa,GAAG;AACZ,WAAO,IAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,OAAvB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,aAAL,EADL,CADJ;AAKH;;AAjBoC;;AAkBxC;;AAED,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AAAEF,IAAAA,OAAO,EAAEE,KAAK,CAACF;AAAjB,GAAP;AACH,CAFD;;AAIA,eAAeV,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    // helper function to render each stream\n    renderStreams() {\n        return null;\n    }\n\n    render() {\n        console.log(this.props.streams);\n        return (\n            <div>\n                {this.renderStreams()}\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return { streams: state.streams };\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}