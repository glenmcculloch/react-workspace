{"ast":null,"code":"var _jsxFileName = \"/Users/glenmcculloch/react-workspace/streams/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, \"Stream Show.\");\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log('STATE', state);\n  console.log('OWNPROPS', ownProps);\n  return null;\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/Users/glenmcculloch/react-workspace/streams/client/src/components/streams/StreamShow.js"],"names":["React","connect","fetchStream","StreamShow","Component","componentDidMount","props","match","params","id","render","console","log","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAGH;;AAVoC;;AAWxC;;AAED,MAAMO,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzCJ,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,QAAxB;AACA,SAAO,IAAP;AACH,CAJD;;AAMA,eAAed,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    render() {\n        console.log(this.props);\n        return (\n            <div>Stream Show.</div>\n        );\n    }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    console.log('STATE', state);\n    console.log('OWNPROPS', ownProps);\n    return null;\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);"]},"metadata":{},"sourceType":"module"}