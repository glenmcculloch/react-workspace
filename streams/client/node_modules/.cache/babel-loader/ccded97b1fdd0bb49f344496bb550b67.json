{"ast":null,"code":"var _jsxFileName = \"/Users/glenmcculloch/react-workspace/streams/client/src/components/GoogleAuth.js\";\nimport React, { useEffect, useState } from 'react';\n\nconst GoogleAuth = () => {\n  const [isSignedIn, setIsSignedIn] = useState(null); // assignment statements are lost after each render.\n\n  useEffect(() => {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '198419312917-kkklc0mjchgud6o8ekjbtugtjad6q62t.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        const auth = window.gapi.auth2.getAuthInstance();\n        setIsSignedIn(auth.isSignedIn.get());\n      });\n    });\n  }, []);\n\n  const renderAuthButton = () => {\n    if (isSignedIn === null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }\n      }, \"I dont know if we are signed in\");\n    } else if (isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }\n      }, \"I am signed in!\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }\n      }, \"I am not signed in\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, renderAuthButton());\n};\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/glenmcculloch/react-workspace/streams/client/src/components/GoogleAuth.js"],"names":["React","useEffect","useState","GoogleAuth","isSignedIn","setIsSignedIn","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","get","renderAuthButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,IAAD,CAA5C,CADqB,CAGrB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,cAAMC,IAAI,GAAGR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAb;AACAX,QAAAA,aAAa,CAACS,IAAI,CAACV,UAAL,CAAgBa,GAAhB,EAAD,CAAb;AACH,OAND;AAOH,KARD;AASH,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAId,UAAU,KAAK,IAAnB,EAAyB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAP;AACH,KAFD,MAEO,IAAIA,UAAJ,EAAgB;AACnB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACH,KAFM,MAEA;AACH,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH;AACJ,GARD;;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMc,gBAAgB,EAAtB,CADJ;AAGH,CA7BD;;AA+BA,eAAef,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst GoogleAuth = () => {\n    const [isSignedIn, setIsSignedIn] = useState(null);\n    \n    // assignment statements are lost after each render.\n    useEffect(() => {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '198419312917-kkklc0mjchgud6o8ekjbtugtjad6q62t.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                const auth = window.gapi.auth2.getAuthInstance();\n                setIsSignedIn(auth.isSignedIn.get());\n            });\n        });\n    }, []);\n\n    const renderAuthButton = () => {\n        if (isSignedIn === null) {\n            return <div>I dont know if we are signed in</div>;\n        } else if (isSignedIn) {\n            return <div>I am signed in!</div>;\n        } else {\n            return <div>I am not signed in</div>;\n        }\n    };\n\n    return (\n        <div>{renderAuthButton()}</div>\n    );\n};\n\nexport default GoogleAuth;"]},"metadata":{},"sourceType":"module"}