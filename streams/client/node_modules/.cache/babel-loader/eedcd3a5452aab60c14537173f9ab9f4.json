{"ast":null,"code":"import streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n}; // redux thunk syntax\n\nexport const createStream = formValues => async (dispatch, getState) => {\n  console.log(getState());\n  const {\n    userId\n  } = getState().auth;\n  const {\n    data\n  } = await streams.post('/streams', { ...formValues,\n    userId\n  }); // dispatch has to be used when using redux thunk\n\n  dispatch({\n    type: CREATE_STREAM,\n    payload: data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const {\n    data\n  } = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const {\n    data\n  } = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const {\n    data\n  } = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: data\n  });\n};","map":{"version":3,"sources":["/Users/glenmcculloch/react-workspace/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","console","log","auth","data","post","fetchStreams","get","fetchStream","id","deleteStream","delete","editStream","put"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,aAA5B,EAA2CC,aAA3C,EAA0DC,YAA1D,EAAwEC,aAAxE,EAAuFC,WAAvF,QAA0G,SAA1G;AAEA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAET,OADH;AAEHU,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMW,YAAY,GAAGC,UAAU,IAAI,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACpEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,EAApB;AAEA,QAAM;AAAEP,IAAAA;AAAF,MAAaO,QAAQ,GAAGG,IAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMpB,OAAO,CAACqB,IAAR,CAAa,UAAb,EAAyB,EAAE,GAAGP,UAAL;AAAiBL,IAAAA;AAAjB,GAAzB,CAAvB,CAJoE,CAMpE;;AACAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,aAAR;AAAuBQ,IAAAA,OAAO,EAAES;AAAhC,GAAD,CAAR;AACH,CARM;AAUP,OAAO,MAAME,YAAY,GAAG,MAAM,MAAMP,QAAN,IAAkB;AAChD,QAAM;AAAEK,IAAAA;AAAF,MAAW,MAAMpB,OAAO,CAACuB,GAAR,CAAY,UAAZ,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAAES;AAAhC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMI,WAAW,GAAGC,EAAE,IAAI,MAAMV,QAAN,IAAkB;AAC/C,QAAM;AAAEK,IAAAA;AAAF,MAAW,MAAMpB,OAAO,CAACuB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,YAAR;AAAsBM,IAAAA,OAAO,EAAES;AAA/B,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMM,YAAY,GAAGD,EAAE,IAAI,MAAMV,QAAN,IAAkB;AAChD,QAAMf,OAAO,CAAC2B,MAAR,CAAgB,YAAWF,EAAG,EAA9B,CAAN;AAEAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEJ,aAAR;AAAuBK,IAAAA,OAAO,EAAEc;AAAhC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMG,UAAU,GAAG,CAACH,EAAD,EAAKX,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC5D,QAAM;AAAEK,IAAAA;AAAF,MAAW,MAAMpB,OAAO,CAAC6B,GAAR,CAAa,YAAWJ,EAAG,EAA3B,EAA8BX,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEH,WAAR;AAAqBI,IAAAA,OAAO,EAAES;AAA9B,GAAD,CAAR;AACH,CAJM","sourcesContent":["import streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\n\nexport const signIn = userId => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n};\n\n// redux thunk syntax\nexport const createStream = formValues => async (dispatch, getState) => {\n    console.log(getState());\n\n    const { userId } = getState().auth;\n    const { data } = await streams.post('/streams', { ...formValues, userId });\n\n    // dispatch has to be used when using redux thunk\n    dispatch({ type: CREATE_STREAM, payload: data });\n};\n\nexport const fetchStreams = () => async dispatch => {\n    const { data } = await streams.get('/streams');\n\n    dispatch({ type: FETCH_STREAMS, payload: data });\n};\n\nexport const fetchStream = id => async dispatch => {\n    const { data } = await streams.get(`/streams/${id}`);\n\n    dispatch({ type: FETCH_STREAM, payload: data });\n};\n\nexport const deleteStream = id => async dispatch => {\n    await streams.delete(`/streams/${id}`);\n\n    dispatch({ type: DELETE_STREAM, payload: id });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const { data } = await streams.put(`/streams/${id}`, formValues);\n\n    dispatch({ type: EDIT_STREAM, payload: data });\n};"]},"metadata":{},"sourceType":"module"}