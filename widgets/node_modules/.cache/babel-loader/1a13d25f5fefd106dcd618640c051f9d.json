{"ast":null,"code":"var _jsxFileName = \"/Users/glenmcculloch/react-workspace/widgets/src/component/DropDown.js\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst DropDown = ({\n  options,\n  selected,\n  onSelectedChange\n}) => {\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    if (!ref.contains) {\n      return;\n    }\n\n    document.body.addEventListener('click', e => {\n      if (ref.current.contains(e.target)) {\n        return;\n      }\n\n      setOpen(false);\n    });\n  }, []);\n  const renderedOptions = options.map(option => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: option.value,\n      className: \"item\",\n      onClick: () => onSelectedChange(option),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, option.label);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Select a Color\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setOpen(!open),\n    className: `ui selection dropdown ${open ? 'visible active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"dropdown icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Selected: \", selected.label), /*#__PURE__*/React.createElement(\"div\", {\n    className: `menu ${open ? 'visible transition' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, renderedOptions))));\n};\n\nexport default DropDown;","map":{"version":3,"sources":["/Users/glenmcculloch/react-workspace/widgets/src/component/DropDown.js"],"names":["React","useState","useEffect","useRef","DropDown","options","selected","onSelectedChange","open","setOpen","ref","contains","document","body","addEventListener","e","current","target","renderedOptions","map","option","value","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAC1D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMS,GAAG,GAAGP,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACQ,GAAG,CAACC,QAAT,EAAmB;AACf;AACH;;AAEDC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAyCC,CAAD,IAAO;AAC3C,UAAIL,GAAG,CAACM,OAAJ,CAAYL,QAAZ,CAAqBI,CAAC,CAACE,MAAvB,CAAJ,EAAoC;AAChC;AACH;;AAEDR,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAND;AAOH,GAZQ,EAYN,EAZM,CAAT;AAcA,QAAMS,eAAe,GAAGb,OAAO,CAACc,GAAR,CAAaC,MAAD,IAAY;AAC5C,QAAIA,MAAM,CAACC,KAAP,KAAiBf,QAAQ,CAACe,KAA9B,EAAqC;AACjC,aAAO,IAAP;AACH;;AAED,wBACI;AAAK,MAAA,GAAG,EAAED,MAAM,CAACC,KAAjB;AAAwB,MAAA,SAAS,EAAC,MAAlC;AAAyC,MAAA,OAAO,EAAE,MAAMd,gBAAgB,CAACa,MAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,MAAM,CAACE,KADZ,CADJ;AAKH,GAVuB,CAAxB;AAYA,sBACI;AAAK,IAAA,GAAG,EAAEZ,GAAV;AAAe,IAAA,SAAS,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,IAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,IAAF,CAA3B;AAAoC,IAAA,SAAS,EAAG,yBAAwBA,IAAI,GAAG,gBAAH,GAAsB,EAAG,EAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiCF,QAAQ,CAACgB,KAA1C,CAFJ,eAGI;AAAK,IAAA,SAAS,EAAG,QAAOd,IAAI,GAAG,oBAAH,GAA0B,EAAG,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKU,eADL,CAHJ,CAFJ,CADJ,CADJ;AAcH,CA5CD;;AA8CA,eAAed,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst DropDown = ({ options, selected, onSelectedChange }) => {\n    const [open, setOpen] = useState(false);\n    const ref = useRef();\n\n    useEffect(() => {\n        if (!ref.contains) {\n            return;\n        }\n\n        document.body.addEventListener('click', (e) => {\n            if (ref.current.contains(e.target)) {\n                return;\n            }\n\n            setOpen(false);\n        })\n    }, []);\n\n    const renderedOptions = options.map((option) => {\n        if (option.value === selected.value) {\n            return null;\n        }\n        \n        return (\n            <div key={option.value} className=\"item\" onClick={() => onSelectedChange(option)}>\n                {option.label}\n            </div>\n        );\n    });\n\n    return (\n        <div ref={ref} className=\"ui form\">\n            <div className=\"field\">\n                <label className=\"label\">Select a Color</label>\n                <div onClick={() => setOpen(!open)} className={`ui selection dropdown ${open ? 'visible active' : ''}`}>\n                    <i className=\"dropdown icon\"></i>\n                    <div className=\"text\">Selected: {selected.label}</div>\n                    <div className={`menu ${open ? 'visible transition' : ''}`}>\n                        {renderedOptions}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DropDown;"]},"metadata":{},"sourceType":"module"}