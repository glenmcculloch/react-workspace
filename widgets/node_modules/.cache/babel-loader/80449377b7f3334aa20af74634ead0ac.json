{"ast":null,"code":"var _jsxFileName = \"/Users/glenmcculloch/react-workspace/widgets/src/component/Search.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Search = () => {\n  const [term, setTerm] = useState('programming');\n  const [debouncedTerm, setDebouncedTerm] = useState(term);\n  const [results, setResults] = useState([]); // tracks changes to input and sets a timer for the wiki search\n\n  useEffect(() => {\n    // set a timer that sets debounced term (other useEffect)\n    const timerId = setTimeout(() => {\n      setDebouncedTerm(term);\n    }, 1000); // clear timer when term changes\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [term]); // searches immediately on change\n\n  useEffect(() => {\n    // create search function\n    const searchWikipedia = async () => {\n      const {\n        data\n      } = await axios.get('https://en.wikipedia.org/w/api.php', {\n        params: {\n          action: 'query',\n          list: 'search',\n          origin: '*',\n          format: 'json',\n          srsearch: debouncedTerm\n        }\n      });\n      setResults(data.query.search);\n    };\n\n    if (term) {\n      searchWikipedia();\n    }\n  }, [debouncedTerm]);\n  const renderedResults = results.map(result => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: result.pageid,\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right floated content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"ui button\",\n      href: `https://en.wikipedia.org?curid=${result.pageid}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \"Go\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, result.title), /*#__PURE__*/React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: result.snippet\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    })));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Enter Search Term\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    value: term,\n    onChange: e => setTerm(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui celled list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, renderedResults)));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/glenmcculloch/react-workspace/widgets/src/component/Search.js"],"names":["React","useState","useEffect","axios","Search","term","setTerm","debouncedTerm","setDebouncedTerm","results","setResults","timerId","setTimeout","clearTimeout","searchWikipedia","data","get","params","action","list","origin","format","srsearch","query","search","renderedResults","map","result","pageid","title","__html","snippet","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Search = () => {\n    const [term, setTerm] = useState('programming');\n    const [debouncedTerm, setDebouncedTerm] = useState(term);\n    const [results, setResults] = useState([]);\n\n    // tracks changes to input and sets a timer for the wiki search\n    useEffect(() => {\n        // set a timer that sets debounced term (other useEffect)\n        const timerId = setTimeout(() => {\n            setDebouncedTerm(term);\n        }, 1000);\n\n        // clear timer when term changes\n        return () => {\n            clearTimeout(timerId);\n        };\n    }, [term]);\n\n    // searches immediately on change\n    useEffect(() => {\n        // create search function\n        const searchWikipedia = async () => {\n            const { data } = await axios.get('https://en.wikipedia.org/w/api.php', {\n                params: {\n                    action: 'query',\n                    list: 'search',\n                    origin: '*',\n                    format: 'json',\n                    srsearch: debouncedTerm\n                }\n            });\n            setResults(data.query.search);\n        };\n\n        if (term) {\n            searchWikipedia();\n        }\n    }, [debouncedTerm]);\n\n    const renderedResults = results.map((result) => {\n        return (\n            <div key={result.pageid} className=\"item\">\n                <div className=\"right floated content\">\n                    <a \n                        className=\"ui button\"\n                        href={`https://en.wikipedia.org?curid=${result.pageid}`}\n                    >\n                        Go\n                    </a>\n                </div>\n                <div className=\"content\">\n                    <div className=\"header\">{result.title}</div>\n                    <span dangerouslySetInnerHTML={{ __html: result.snippet}}></span>\n                </div>\n            </div>\n        );\n    });\n    \n    return (\n        <div>\n            <div className=\"ui form\">\n                <div className=\"field\">\n                    <label>Enter Search Term</label>\n                    <input className=\"input\" type=\"text\" value={term} onChange={e => setTerm(e.target.value)} />\n                </div>\n                <div className=\"ui celled list\">\n                    {renderedResults}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}