{"ast":null,"code":"var _jsxFileName = \"/Users/glenmcculloch/react-workspace/seasons/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: null,\n      longitude: null,\n      errorMessage: ''\n    };\n  }\n\n  renderContent() {\n    if (!this.state.latitude && !this.state.errorMessage) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.state.latitude && !this.state.errorMessage) {\n      return /*#__PURE__*/React.createElement(SeasonDisplay, {\n        latitude: this.state.latitude,\n        longitude: this.state.longitude,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.state.errorMessage) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }\n      }, \"Error: \", this.state.errorMessage);\n    }\n  }\n\n  componentDidMount() {\n    // get the user's current position\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    }), err => this.setState({\n      errorMessage: err.message\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"border red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, this.renderContent());\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 17\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/glenmcculloch/react-workspace/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","Spinner","App","Component","constructor","props","state","latitude","longitude","errorMessage","renderContent","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","err","message","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAO9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SANnBC,KAMmB,GANX;AACJC,MAAAA,QAAQ,EAAE,IADN;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,YAAY,EAAE;AAHV,KAMW;AAElB;;AAEDC,EAAAA,aAAa,GAAG;AACZ,QAAI,CAAC,KAAKJ,KAAL,CAAWC,QAAZ,IAAwB,CAAC,KAAKD,KAAL,CAAWG,YAAxC,EAAsD;AAClD,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,QAAI,KAAKH,KAAL,CAAWC,QAAX,IAAuB,CAAC,KAAKD,KAAL,CAAWG,YAAvC,EAAqD;AACjD,0BAAO,oBAAC,aAAD;AAAe,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWC,QAApC;AAA8C,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,QAAI,KAAKF,KAAL,CAAWG,YAAf,EAA6B;AACzB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKH,KAAL,CAAWG,YAAxB,CAAP;AACH;AACJ;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB;AACAC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACIC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAACV,MAAAA,QAAQ,EAAES,QAAQ,CAACE,MAAT,CAAgBX,QAA3B;AAAqCC,MAAAA,SAAS,EAAEQ,QAAQ,CAACE,MAAT,CAAgBV;AAAhE,KAAd,CADhB,EAEIW,GAAG,IAAI,KAAKF,QAAL,CAAc;AAACR,MAAAA,YAAY,EAAEU,GAAG,CAACC;AAAnB,KAAd,CAFX;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKX,aAAL,EADL,CADJ;AAKH;;AAvC6B;;AA0ClCX,QAAQ,CAACsB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nclass App extends React.Component {\n    state = {\n        latitude: null,\n        longitude: null,\n        errorMessage: ''\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    renderContent() {\n        if (!this.state.latitude && !this.state.errorMessage) {\n            return <Spinner />;\n        }\n        \n        if (this.state.latitude && !this.state.errorMessage) {\n            return <SeasonDisplay latitude={this.state.latitude} longitude={this.state.longitude} />\n        }\n\n        if (this.state.errorMessage) {\n            return <div>Error: {this.state.errorMessage}</div>;\n        }\n    }\n\n    componentDidMount() {\n        // get the user's current position\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({latitude: position.coords.latitude, longitude: position.coords.longitude}),\n            err => this.setState({errorMessage: err.message})\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"border red\">\n                {this.renderContent()}\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}